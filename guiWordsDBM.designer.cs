#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace guiWords
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="winkert_guiWords")]
	public partial class guiWordsDBMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttWordForms(tWordForms instance);
    partial void UpdatetWordForms(tWordForms instance);
    partial void DeletetWordForms(tWordForms instance);
    partial void InsertutCase(utCase instance);
    partial void UpdateutCase(utCase instance);
    partial void DeleteutCase(utCase instance);
    partial void InsertutVoice(utVoice instance);
    partial void UpdateutVoice(utVoice instance);
    partial void DeleteutVoice(utVoice instance);
    partial void InsertutConj(utConj instance);
    partial void UpdateutConj(utConj instance);
    partial void DeleteutConj(utConj instance);
    partial void InsertutDecl(utDecl instance);
    partial void UpdateutDecl(utDecl instance);
    partial void DeleteutDecl(utDecl instance);
    partial void InsertutGender(utGender instance);
    partial void UpdateutGender(utGender instance);
    partial void DeleteutGender(utGender instance);
    partial void InsertutMood(utMood instance);
    partial void UpdateutMood(utMood instance);
    partial void DeleteutMood(utMood instance);
    partial void InsertutNumber(utNumber instance);
    partial void UpdateutNumber(utNumber instance);
    partial void DeleteutNumber(utNumber instance);
    partial void InsertutPartOfSpeech(utPartOfSpeech instance);
    partial void UpdateutPartOfSpeech(utPartOfSpeech instance);
    partial void DeleteutPartOfSpeech(utPartOfSpeech instance);
    partial void InsertutPerson(utPerson instance);
    partial void UpdateutPerson(utPerson instance);
    partial void DeleteutPerson(utPerson instance);
    partial void InsertutTense(utTense instance);
    partial void UpdateutTense(utTense instance);
    partial void DeleteutTense(utTense instance);
    partial void InsertutVerb(utVerb instance);
    partial void UpdateutVerb(utVerb instance);
    partial void DeleteutVerb(utVerb instance);
    #endregion
		
		public guiWordsDBMDataContext() : 
				base(global::guiWords.Properties.Settings.Default.winkert_guiWordsConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public guiWordsDBMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public guiWordsDBMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public guiWordsDBMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public guiWordsDBMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tWordForms> tWordForms
		{
			get
			{
				return this.GetTable<tWordForms>();
			}
		}
		
		public System.Data.Linq.Table<utCase> utCases
		{
			get
			{
				return this.GetTable<utCase>();
			}
		}
		
		public System.Data.Linq.Table<utVoice> utVoices
		{
			get
			{
				return this.GetTable<utVoice>();
			}
		}
		
		public System.Data.Linq.Table<utConj> utConjs
		{
			get
			{
				return this.GetTable<utConj>();
			}
		}
		
		public System.Data.Linq.Table<utDecl> utDecls
		{
			get
			{
				return this.GetTable<utDecl>();
			}
		}
		
		public System.Data.Linq.Table<utGender> utGenders
		{
			get
			{
				return this.GetTable<utGender>();
			}
		}
		
		public System.Data.Linq.Table<utMood> utMoods
		{
			get
			{
				return this.GetTable<utMood>();
			}
		}
		
		public System.Data.Linq.Table<utNumber> utNumbers
		{
			get
			{
				return this.GetTable<utNumber>();
			}
		}
		
		public System.Data.Linq.Table<utPartOfSpeech> utPartOfSpeeches
		{
			get
			{
				return this.GetTable<utPartOfSpeech>();
			}
		}
		
		public System.Data.Linq.Table<utPerson> utPersons
		{
			get
			{
				return this.GetTable<utPerson>();
			}
		}
		
		public System.Data.Linq.Table<utTense> utTenses
		{
			get
			{
				return this.GetTable<utTense>();
			}
		}
		
		public System.Data.Linq.Table<utVerb> utVerbs
		{
			get
			{
				return this.GetTable<utVerb>();
			}
		}
		
		public System.Data.Linq.Table<FormsView> FormsViews
		{
			get
			{
				return this.GetTable<FormsView>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="winkert_winkert.sp_guiWords_Parse")]
		public ISingleResult<FormsView> sp_guiWords_Parse([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string query)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query);
			return ((ISingleResult<FormsView>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="winkert_winkert.sp_AllForms")]
		public ISingleResult<FormsView> sp_AllForms([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> d_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), d_ID);
			return ((ISingleResult<FormsView>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.tWordForms")]
	public partial class tWordForms : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _wf_ID;
		
		private System.Nullable<int> _d_ID;
		
		private string _d_Word;
		
		private string _d_Meaning;
		
		private System.Nullable<int> _s_ID;
		
		private string _wf_Form;
		
		private System.Nullable<int> _e_ID;
		
		private System.Nullable<int> _vc_ID;
		
		private System.Nullable<int> _vb_ID;
		
		private System.Nullable<int> _nc_ID;
		
		private System.Nullable<int> _nd_ID;
		
		private System.Nullable<int> _ge_ID;
		
		private System.Nullable<int> _vm_ID;
		
		private System.Nullable<int> _num_ID;
		
		private System.Nullable<int> _part_ID;
		
		private System.Nullable<int> _vp_ID;
		
		private System.Nullable<int> _vt_ID;
		
		private System.Nullable<int> _vv_ID;
		
		private EntityRef<utCase> _utCase;
		
		private EntityRef<utVoice> _utVoice;
		
		private EntityRef<utConj> _utConj;
		
		private EntityRef<utDecl> _utDecl;
		
		private EntityRef<utGender> _utGender;
		
		private EntityRef<utMood> _utMood;
		
		private EntityRef<utNumber> _utNumber;
		
		private EntityRef<utPartOfSpeech> _utPartOfSpeech;
		
		private EntityRef<utPerson> _utPerson;
		
		private EntityRef<utTense> _utTense;
		
		private EntityRef<utVerb> _utVerb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwf_IDChanging(int value);
    partial void Onwf_IDChanged();
    partial void Ond_IDChanging(System.Nullable<int> value);
    partial void Ond_IDChanged();
    partial void Ond_WordChanging(string value);
    partial void Ond_WordChanged();
    partial void Ond_MeaningChanging(string value);
    partial void Ond_MeaningChanged();
    partial void Ons_IDChanging(System.Nullable<int> value);
    partial void Ons_IDChanged();
    partial void Onwf_FormChanging(string value);
    partial void Onwf_FormChanged();
    partial void One_IDChanging(System.Nullable<int> value);
    partial void One_IDChanged();
    partial void Onvc_IDChanging(System.Nullable<int> value);
    partial void Onvc_IDChanged();
    partial void Onvb_IDChanging(System.Nullable<int> value);
    partial void Onvb_IDChanged();
    partial void Onnc_IDChanging(System.Nullable<int> value);
    partial void Onnc_IDChanged();
    partial void Onnd_IDChanging(System.Nullable<int> value);
    partial void Onnd_IDChanged();
    partial void Onge_IDChanging(System.Nullable<int> value);
    partial void Onge_IDChanged();
    partial void Onvm_IDChanging(System.Nullable<int> value);
    partial void Onvm_IDChanged();
    partial void Onnum_IDChanging(System.Nullable<int> value);
    partial void Onnum_IDChanged();
    partial void Onpart_IDChanging(System.Nullable<int> value);
    partial void Onpart_IDChanged();
    partial void Onvp_IDChanging(System.Nullable<int> value);
    partial void Onvp_IDChanged();
    partial void Onvt_IDChanging(System.Nullable<int> value);
    partial void Onvt_IDChanged();
    partial void Onvv_IDChanging(System.Nullable<int> value);
    partial void Onvv_IDChanged();
    #endregion
		
		public tWordForms()
		{
			this._utCase = default(EntityRef<utCase>);
			this._utVoice = default(EntityRef<utVoice>);
			this._utConj = default(EntityRef<utConj>);
			this._utDecl = default(EntityRef<utDecl>);
			this._utGender = default(EntityRef<utGender>);
			this._utMood = default(EntityRef<utMood>);
			this._utNumber = default(EntityRef<utNumber>);
			this._utPartOfSpeech = default(EntityRef<utPartOfSpeech>);
			this._utPerson = default(EntityRef<utPerson>);
			this._utTense = default(EntityRef<utTense>);
			this._utVerb = default(EntityRef<utVerb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wf_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int wf_ID
		{
			get
			{
				return this._wf_ID;
			}
			set
			{
				if ((this._wf_ID != value))
				{
					this.Onwf_IDChanging(value);
					this.SendPropertyChanging();
					this._wf_ID = value;
					this.SendPropertyChanged("wf_ID");
					this.Onwf_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_ID", DbType="Int")]
		public System.Nullable<int> d_ID
		{
			get
			{
				return this._d_ID;
			}
			set
			{
				if ((this._d_ID != value))
				{
					this.Ond_IDChanging(value);
					this.SendPropertyChanging();
					this._d_ID = value;
					this.SendPropertyChanged("d_ID");
					this.Ond_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_Word", DbType="VarChar(50)")]
		public string d_Word
		{
			get
			{
				return this._d_Word;
			}
			set
			{
				if ((this._d_Word != value))
				{
					this.Ond_WordChanging(value);
					this.SendPropertyChanging();
					this._d_Word = value;
					this.SendPropertyChanged("d_Word");
					this.Ond_WordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_Meaning", DbType="VarChar(MAX)")]
		public string d_Meaning
		{
			get
			{
				return this._d_Meaning;
			}
			set
			{
				if ((this._d_Meaning != value))
				{
					this.Ond_MeaningChanging(value);
					this.SendPropertyChanging();
					this._d_Meaning = value;
					this.SendPropertyChanged("d_Meaning");
					this.Ond_MeaningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_ID", DbType="Int")]
		public System.Nullable<int> s_ID
		{
			get
			{
				return this._s_ID;
			}
			set
			{
				if ((this._s_ID != value))
				{
					this.Ons_IDChanging(value);
					this.SendPropertyChanging();
					this._s_ID = value;
					this.SendPropertyChanged("s_ID");
					this.Ons_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wf_Form", DbType="VarChar(50)")]
		public string wf_Form
		{
			get
			{
				return this._wf_Form;
			}
			set
			{
				if ((this._wf_Form != value))
				{
					this.Onwf_FormChanging(value);
					this.SendPropertyChanging();
					this._wf_Form = value;
					this.SendPropertyChanged("wf_Form");
					this.Onwf_FormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_ID", DbType="Int")]
		public System.Nullable<int> e_ID
		{
			get
			{
				return this._e_ID;
			}
			set
			{
				if ((this._e_ID != value))
				{
					this.One_IDChanging(value);
					this.SendPropertyChanging();
					this._e_ID = value;
					this.SendPropertyChanged("e_ID");
					this.One_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vc_ID", DbType="Int")]
		public System.Nullable<int> vc_ID
		{
			get
			{
				return this._vc_ID;
			}
			set
			{
				if ((this._vc_ID != value))
				{
					if (this._utConj.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvc_IDChanging(value);
					this.SendPropertyChanging();
					this._vc_ID = value;
					this.SendPropertyChanged("vc_ID");
					this.Onvc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vb_ID", DbType="Int")]
		public System.Nullable<int> vb_ID
		{
			get
			{
				return this._vb_ID;
			}
			set
			{
				if ((this._vb_ID != value))
				{
					if (this._utVerb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvb_IDChanging(value);
					this.SendPropertyChanging();
					this._vb_ID = value;
					this.SendPropertyChanged("vb_ID");
					this.Onvb_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nc_ID", DbType="Int")]
		public System.Nullable<int> nc_ID
		{
			get
			{
				return this._nc_ID;
			}
			set
			{
				if ((this._nc_ID != value))
				{
					if (this._utCase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnc_IDChanging(value);
					this.SendPropertyChanging();
					this._nc_ID = value;
					this.SendPropertyChanged("nc_ID");
					this.Onnc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nd_ID", DbType="Int")]
		public System.Nullable<int> nd_ID
		{
			get
			{
				return this._nd_ID;
			}
			set
			{
				if ((this._nd_ID != value))
				{
					if (this._utDecl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnd_IDChanging(value);
					this.SendPropertyChanging();
					this._nd_ID = value;
					this.SendPropertyChanged("nd_ID");
					this.Onnd_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_ID", DbType="Int")]
		public System.Nullable<int> ge_ID
		{
			get
			{
				return this._ge_ID;
			}
			set
			{
				if ((this._ge_ID != value))
				{
					if (this._utGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onge_IDChanging(value);
					this.SendPropertyChanging();
					this._ge_ID = value;
					this.SendPropertyChanged("ge_ID");
					this.Onge_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vm_ID", DbType="Int")]
		public System.Nullable<int> vm_ID
		{
			get
			{
				return this._vm_ID;
			}
			set
			{
				if ((this._vm_ID != value))
				{
					if (this._utMood.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvm_IDChanging(value);
					this.SendPropertyChanging();
					this._vm_ID = value;
					this.SendPropertyChanged("vm_ID");
					this.Onvm_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_ID", DbType="Int")]
		public System.Nullable<int> num_ID
		{
			get
			{
				return this._num_ID;
			}
			set
			{
				if ((this._num_ID != value))
				{
					if (this._utNumber.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnum_IDChanging(value);
					this.SendPropertyChanging();
					this._num_ID = value;
					this.SendPropertyChanged("num_ID");
					this.Onnum_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_ID", DbType="Int")]
		public System.Nullable<int> part_ID
		{
			get
			{
				return this._part_ID;
			}
			set
			{
				if ((this._part_ID != value))
				{
					if (this._utPartOfSpeech.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpart_IDChanging(value);
					this.SendPropertyChanging();
					this._part_ID = value;
					this.SendPropertyChanged("part_ID");
					this.Onpart_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vp_ID", DbType="Int")]
		public System.Nullable<int> vp_ID
		{
			get
			{
				return this._vp_ID;
			}
			set
			{
				if ((this._vp_ID != value))
				{
					if (this._utPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvp_IDChanging(value);
					this.SendPropertyChanging();
					this._vp_ID = value;
					this.SendPropertyChanged("vp_ID");
					this.Onvp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vt_ID", DbType="Int")]
		public System.Nullable<int> vt_ID
		{
			get
			{
				return this._vt_ID;
			}
			set
			{
				if ((this._vt_ID != value))
				{
					if (this._utTense.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvt_IDChanging(value);
					this.SendPropertyChanging();
					this._vt_ID = value;
					this.SendPropertyChanged("vt_ID");
					this.Onvt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vv_ID", DbType="Int")]
		public System.Nullable<int> vv_ID
		{
			get
			{
				return this._vv_ID;
			}
			set
			{
				if ((this._vv_ID != value))
				{
					if (this._utVoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvv_IDChanging(value);
					this.SendPropertyChanging();
					this._vv_ID = value;
					this.SendPropertyChanged("vv_ID");
					this.Onvv_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utCase_tWordForms", Storage="_utCase", ThisKey="nc_ID", OtherKey="nc_ID", IsForeignKey=true)]
		public utCase utCase
		{
			get
			{
				return this._utCase.Entity;
			}
			set
			{
				utCase previousValue = this._utCase.Entity;
				if (((previousValue != value) 
							|| (this._utCase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utCase.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utCase.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._nc_ID = value.nc_ID;
					}
					else
					{
						this._nc_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utCase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utVoice_tWordForms", Storage="_utVoice", ThisKey="vv_ID", OtherKey="vv_ID", IsForeignKey=true)]
		public utVoice utVoice
		{
			get
			{
				return this._utVoice.Entity;
			}
			set
			{
				utVoice previousValue = this._utVoice.Entity;
				if (((previousValue != value) 
							|| (this._utVoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utVoice.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utVoice.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._vv_ID = value.vv_ID;
					}
					else
					{
						this._vv_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utVoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utConj_tWordForms", Storage="_utConj", ThisKey="vc_ID", OtherKey="vc_ID", IsForeignKey=true)]
		public utConj utConj
		{
			get
			{
				return this._utConj.Entity;
			}
			set
			{
				utConj previousValue = this._utConj.Entity;
				if (((previousValue != value) 
							|| (this._utConj.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utConj.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utConj.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._vc_ID = value.vc_ID;
					}
					else
					{
						this._vc_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utConj");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utDecl_tWordForms", Storage="_utDecl", ThisKey="nd_ID", OtherKey="nd_ID", IsForeignKey=true)]
		public utDecl utDecl
		{
			get
			{
				return this._utDecl.Entity;
			}
			set
			{
				utDecl previousValue = this._utDecl.Entity;
				if (((previousValue != value) 
							|| (this._utDecl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utDecl.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utDecl.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._nd_ID = value.nd_ID;
					}
					else
					{
						this._nd_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utDecl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utGender_tWordForms", Storage="_utGender", ThisKey="ge_ID", OtherKey="ge_ID", IsForeignKey=true)]
		public utGender utGender
		{
			get
			{
				return this._utGender.Entity;
			}
			set
			{
				utGender previousValue = this._utGender.Entity;
				if (((previousValue != value) 
							|| (this._utGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utGender.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utGender.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._ge_ID = value.ge_ID;
					}
					else
					{
						this._ge_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utGender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utMood_tWordForms", Storage="_utMood", ThisKey="vm_ID", OtherKey="vm_ID", IsForeignKey=true)]
		public utMood utMood
		{
			get
			{
				return this._utMood.Entity;
			}
			set
			{
				utMood previousValue = this._utMood.Entity;
				if (((previousValue != value) 
							|| (this._utMood.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utMood.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utMood.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._vm_ID = value.vm_ID;
					}
					else
					{
						this._vm_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utMood");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utNumber_tWordForms", Storage="_utNumber", ThisKey="num_ID", OtherKey="num_ID", IsForeignKey=true)]
		public utNumber utNumber
		{
			get
			{
				return this._utNumber.Entity;
			}
			set
			{
				utNumber previousValue = this._utNumber.Entity;
				if (((previousValue != value) 
							|| (this._utNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utNumber.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utNumber.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._num_ID = value.num_ID;
					}
					else
					{
						this._num_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utNumber");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utPartOfSpeech_tWordForms", Storage="_utPartOfSpeech", ThisKey="part_ID", OtherKey="ps_ID", IsForeignKey=true)]
		public utPartOfSpeech utPartOfSpeech
		{
			get
			{
				return this._utPartOfSpeech.Entity;
			}
			set
			{
				utPartOfSpeech previousValue = this._utPartOfSpeech.Entity;
				if (((previousValue != value) 
							|| (this._utPartOfSpeech.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utPartOfSpeech.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utPartOfSpeech.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._part_ID = value.ps_ID;
					}
					else
					{
						this._part_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utPartOfSpeech");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utPerson_tWordForms", Storage="_utPerson", ThisKey="vp_ID", OtherKey="vp_ID", IsForeignKey=true)]
		public utPerson utPerson
		{
			get
			{
				return this._utPerson.Entity;
			}
			set
			{
				utPerson previousValue = this._utPerson.Entity;
				if (((previousValue != value) 
							|| (this._utPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utPerson.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utPerson.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._vp_ID = value.vp_ID;
					}
					else
					{
						this._vp_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utTense_tWordForms", Storage="_utTense", ThisKey="vt_ID", OtherKey="vt_ID", IsForeignKey=true)]
		public utTense utTense
		{
			get
			{
				return this._utTense.Entity;
			}
			set
			{
				utTense previousValue = this._utTense.Entity;
				if (((previousValue != value) 
							|| (this._utTense.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utTense.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utTense.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._vt_ID = value.vt_ID;
					}
					else
					{
						this._vt_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utTense");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utVerb_tWordForms", Storage="_utVerb", ThisKey="vb_ID", OtherKey="vb_ID", IsForeignKey=true)]
		public utVerb utVerb
		{
			get
			{
				return this._utVerb.Entity;
			}
			set
			{
				utVerb previousValue = this._utVerb.Entity;
				if (((previousValue != value) 
							|| (this._utVerb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._utVerb.Entity = null;
						previousValue.tWordForms.Remove(this);
					}
					this._utVerb.Entity = value;
					if ((value != null))
					{
						value.tWordForms.Add(this);
						this._vb_ID = value.vb_ID;
					}
					else
					{
						this._vb_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("utVerb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utCase")]
	public partial class utCase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nc_ID;
		
		private string _nc_Name;
		
		private string _nc_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnc_IDChanging(int value);
    partial void Onnc_IDChanged();
    partial void Onnc_NameChanging(string value);
    partial void Onnc_NameChanged();
    partial void Onnc_DescriptionChanging(string value);
    partial void Onnc_DescriptionChanged();
    #endregion
		
		public utCase()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nc_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int nc_ID
		{
			get
			{
				return this._nc_ID;
			}
			set
			{
				if ((this._nc_ID != value))
				{
					this.Onnc_IDChanging(value);
					this.SendPropertyChanging();
					this._nc_ID = value;
					this.SendPropertyChanged("nc_ID");
					this.Onnc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nc_Name", DbType="VarChar(15)")]
		public string nc_Name
		{
			get
			{
				return this._nc_Name;
			}
			set
			{
				if ((this._nc_Name != value))
				{
					this.Onnc_NameChanging(value);
					this.SendPropertyChanging();
					this._nc_Name = value;
					this.SendPropertyChanged("nc_Name");
					this.Onnc_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nc_Description", DbType="VarChar(50)")]
		public string nc_Description
		{
			get
			{
				return this._nc_Description;
			}
			set
			{
				if ((this._nc_Description != value))
				{
					this.Onnc_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._nc_Description = value;
					this.SendPropertyChanged("nc_Description");
					this.Onnc_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utCase_tWordForms", Storage="_tWordForms", ThisKey="nc_ID", OtherKey="nc_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utCase = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utCase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utVoice")]
	public partial class utVoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vv_ID;
		
		private string _vv_Name;
		
		private string _vv_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvv_IDChanging(int value);
    partial void Onvv_IDChanged();
    partial void Onvv_NameChanging(string value);
    partial void Onvv_NameChanged();
    partial void Onvv_DescriptionChanging(string value);
    partial void Onvv_DescriptionChanged();
    #endregion
		
		public utVoice()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vv_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vv_ID
		{
			get
			{
				return this._vv_ID;
			}
			set
			{
				if ((this._vv_ID != value))
				{
					this.Onvv_IDChanging(value);
					this.SendPropertyChanging();
					this._vv_ID = value;
					this.SendPropertyChanged("vv_ID");
					this.Onvv_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vv_Name", DbType="VarChar(15)")]
		public string vv_Name
		{
			get
			{
				return this._vv_Name;
			}
			set
			{
				if ((this._vv_Name != value))
				{
					this.Onvv_NameChanging(value);
					this.SendPropertyChanging();
					this._vv_Name = value;
					this.SendPropertyChanged("vv_Name");
					this.Onvv_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vv_Description", DbType="VarChar(50)")]
		public string vv_Description
		{
			get
			{
				return this._vv_Description;
			}
			set
			{
				if ((this._vv_Description != value))
				{
					this.Onvv_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._vv_Description = value;
					this.SendPropertyChanged("vv_Description");
					this.Onvv_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utVoice_tWordForms", Storage="_tWordForms", ThisKey="vv_ID", OtherKey="vv_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utVoice = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utVoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utConj")]
	public partial class utConj : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vc_ID;
		
		private string _vc_Name;
		
		private string _vc_Description;
		
		private System.Nullable<int> _vc_Conj1;
		
		private System.Nullable<int> _vc_Conj2;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvc_IDChanging(int value);
    partial void Onvc_IDChanged();
    partial void Onvc_NameChanging(string value);
    partial void Onvc_NameChanged();
    partial void Onvc_DescriptionChanging(string value);
    partial void Onvc_DescriptionChanged();
    partial void Onvc_Conj1Changing(System.Nullable<int> value);
    partial void Onvc_Conj1Changed();
    partial void Onvc_Conj2Changing(System.Nullable<int> value);
    partial void Onvc_Conj2Changed();
    #endregion
		
		public utConj()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vc_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vc_ID
		{
			get
			{
				return this._vc_ID;
			}
			set
			{
				if ((this._vc_ID != value))
				{
					this.Onvc_IDChanging(value);
					this.SendPropertyChanging();
					this._vc_ID = value;
					this.SendPropertyChanged("vc_ID");
					this.Onvc_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vc_Name", DbType="VarChar(15)")]
		public string vc_Name
		{
			get
			{
				return this._vc_Name;
			}
			set
			{
				if ((this._vc_Name != value))
				{
					this.Onvc_NameChanging(value);
					this.SendPropertyChanging();
					this._vc_Name = value;
					this.SendPropertyChanged("vc_Name");
					this.Onvc_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vc_Description", DbType="VarChar(50)")]
		public string vc_Description
		{
			get
			{
				return this._vc_Description;
			}
			set
			{
				if ((this._vc_Description != value))
				{
					this.Onvc_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._vc_Description = value;
					this.SendPropertyChanged("vc_Description");
					this.Onvc_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vc_Conj1", DbType="Int")]
		public System.Nullable<int> vc_Conj1
		{
			get
			{
				return this._vc_Conj1;
			}
			set
			{
				if ((this._vc_Conj1 != value))
				{
					this.Onvc_Conj1Changing(value);
					this.SendPropertyChanging();
					this._vc_Conj1 = value;
					this.SendPropertyChanged("vc_Conj1");
					this.Onvc_Conj1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vc_Conj2", DbType="Int")]
		public System.Nullable<int> vc_Conj2
		{
			get
			{
				return this._vc_Conj2;
			}
			set
			{
				if ((this._vc_Conj2 != value))
				{
					this.Onvc_Conj2Changing(value);
					this.SendPropertyChanging();
					this._vc_Conj2 = value;
					this.SendPropertyChanged("vc_Conj2");
					this.Onvc_Conj2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utConj_tWordForms", Storage="_tWordForms", ThisKey="vc_ID", OtherKey="vc_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utConj = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utConj = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utDecl")]
	public partial class utDecl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nd_ID;
		
		private string _nd_Name;
		
		private string _nd_Description;
		
		private System.Nullable<int> _nd_Decl1;
		
		private System.Nullable<int> _nd_Decl2;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnd_IDChanging(int value);
    partial void Onnd_IDChanged();
    partial void Onnd_NameChanging(string value);
    partial void Onnd_NameChanged();
    partial void Onnd_DescriptionChanging(string value);
    partial void Onnd_DescriptionChanged();
    partial void Onnd_Decl1Changing(System.Nullable<int> value);
    partial void Onnd_Decl1Changed();
    partial void Onnd_Decl2Changing(System.Nullable<int> value);
    partial void Onnd_Decl2Changed();
    #endregion
		
		public utDecl()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nd_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int nd_ID
		{
			get
			{
				return this._nd_ID;
			}
			set
			{
				if ((this._nd_ID != value))
				{
					this.Onnd_IDChanging(value);
					this.SendPropertyChanging();
					this._nd_ID = value;
					this.SendPropertyChanged("nd_ID");
					this.Onnd_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nd_Name", DbType="VarChar(15)")]
		public string nd_Name
		{
			get
			{
				return this._nd_Name;
			}
			set
			{
				if ((this._nd_Name != value))
				{
					this.Onnd_NameChanging(value);
					this.SendPropertyChanging();
					this._nd_Name = value;
					this.SendPropertyChanged("nd_Name");
					this.Onnd_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nd_Description", DbType="VarChar(50)")]
		public string nd_Description
		{
			get
			{
				return this._nd_Description;
			}
			set
			{
				if ((this._nd_Description != value))
				{
					this.Onnd_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._nd_Description = value;
					this.SendPropertyChanged("nd_Description");
					this.Onnd_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nd_Decl1", DbType="Int")]
		public System.Nullable<int> nd_Decl1
		{
			get
			{
				return this._nd_Decl1;
			}
			set
			{
				if ((this._nd_Decl1 != value))
				{
					this.Onnd_Decl1Changing(value);
					this.SendPropertyChanging();
					this._nd_Decl1 = value;
					this.SendPropertyChanged("nd_Decl1");
					this.Onnd_Decl1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nd_Decl2", DbType="Int")]
		public System.Nullable<int> nd_Decl2
		{
			get
			{
				return this._nd_Decl2;
			}
			set
			{
				if ((this._nd_Decl2 != value))
				{
					this.Onnd_Decl2Changing(value);
					this.SendPropertyChanging();
					this._nd_Decl2 = value;
					this.SendPropertyChanged("nd_Decl2");
					this.Onnd_Decl2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utDecl_tWordForms", Storage="_tWordForms", ThisKey="nd_ID", OtherKey="nd_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utDecl = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utDecl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utGender")]
	public partial class utGender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ge_ID;
		
		private string _ge_Name;
		
		private string _ge_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onge_IDChanging(int value);
    partial void Onge_IDChanged();
    partial void Onge_NameChanging(string value);
    partial void Onge_NameChanged();
    partial void Onge_DescriptionChanging(string value);
    partial void Onge_DescriptionChanged();
    #endregion
		
		public utGender()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ge_ID
		{
			get
			{
				return this._ge_ID;
			}
			set
			{
				if ((this._ge_ID != value))
				{
					this.Onge_IDChanging(value);
					this.SendPropertyChanging();
					this._ge_ID = value;
					this.SendPropertyChanged("ge_ID");
					this.Onge_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_Name", DbType="VarChar(15)")]
		public string ge_Name
		{
			get
			{
				return this._ge_Name;
			}
			set
			{
				if ((this._ge_Name != value))
				{
					this.Onge_NameChanging(value);
					this.SendPropertyChanging();
					this._ge_Name = value;
					this.SendPropertyChanged("ge_Name");
					this.Onge_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_Description", DbType="VarChar(50)")]
		public string ge_Description
		{
			get
			{
				return this._ge_Description;
			}
			set
			{
				if ((this._ge_Description != value))
				{
					this.Onge_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._ge_Description = value;
					this.SendPropertyChanged("ge_Description");
					this.Onge_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utGender_tWordForms", Storage="_tWordForms", ThisKey="ge_ID", OtherKey="ge_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utGender = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utGender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utMood")]
	public partial class utMood : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vm_ID;
		
		private string _vm_Name;
		
		private string _vm_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvm_IDChanging(int value);
    partial void Onvm_IDChanged();
    partial void Onvm_NameChanging(string value);
    partial void Onvm_NameChanged();
    partial void Onvm_DescriptionChanging(string value);
    partial void Onvm_DescriptionChanged();
    #endregion
		
		public utMood()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vm_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vm_ID
		{
			get
			{
				return this._vm_ID;
			}
			set
			{
				if ((this._vm_ID != value))
				{
					this.Onvm_IDChanging(value);
					this.SendPropertyChanging();
					this._vm_ID = value;
					this.SendPropertyChanged("vm_ID");
					this.Onvm_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vm_Name", DbType="VarChar(15)")]
		public string vm_Name
		{
			get
			{
				return this._vm_Name;
			}
			set
			{
				if ((this._vm_Name != value))
				{
					this.Onvm_NameChanging(value);
					this.SendPropertyChanging();
					this._vm_Name = value;
					this.SendPropertyChanged("vm_Name");
					this.Onvm_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vm_Description", DbType="VarChar(50)")]
		public string vm_Description
		{
			get
			{
				return this._vm_Description;
			}
			set
			{
				if ((this._vm_Description != value))
				{
					this.Onvm_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._vm_Description = value;
					this.SendPropertyChanged("vm_Description");
					this.Onvm_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utMood_tWordForms", Storage="_tWordForms", ThisKey="vm_ID", OtherKey="vm_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utMood = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utMood = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utNumber")]
	public partial class utNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _num_ID;
		
		private string _num_Name;
		
		private string _num_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnum_IDChanging(int value);
    partial void Onnum_IDChanged();
    partial void Onnum_NameChanging(string value);
    partial void Onnum_NameChanged();
    partial void Onnum_DescriptionChanging(string value);
    partial void Onnum_DescriptionChanged();
    #endregion
		
		public utNumber()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int num_ID
		{
			get
			{
				return this._num_ID;
			}
			set
			{
				if ((this._num_ID != value))
				{
					this.Onnum_IDChanging(value);
					this.SendPropertyChanging();
					this._num_ID = value;
					this.SendPropertyChanged("num_ID");
					this.Onnum_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_Name", DbType="VarChar(15)")]
		public string num_Name
		{
			get
			{
				return this._num_Name;
			}
			set
			{
				if ((this._num_Name != value))
				{
					this.Onnum_NameChanging(value);
					this.SendPropertyChanging();
					this._num_Name = value;
					this.SendPropertyChanged("num_Name");
					this.Onnum_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_Description", DbType="VarChar(50)")]
		public string num_Description
		{
			get
			{
				return this._num_Description;
			}
			set
			{
				if ((this._num_Description != value))
				{
					this.Onnum_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._num_Description = value;
					this.SendPropertyChanged("num_Description");
					this.Onnum_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utNumber_tWordForms", Storage="_tWordForms", ThisKey="num_ID", OtherKey="num_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utNumber = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utNumber = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utPartOfSpeech")]
	public partial class utPartOfSpeech : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ps_ID;
		
		private string _part_Name;
		
		private string _part_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onps_IDChanging(int value);
    partial void Onps_IDChanged();
    partial void Onpart_NameChanging(string value);
    partial void Onpart_NameChanged();
    partial void Onpart_DescriptionChanging(string value);
    partial void Onpart_DescriptionChanged();
    #endregion
		
		public utPartOfSpeech()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ps_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ps_ID
		{
			get
			{
				return this._ps_ID;
			}
			set
			{
				if ((this._ps_ID != value))
				{
					this.Onps_IDChanging(value);
					this.SendPropertyChanging();
					this._ps_ID = value;
					this.SendPropertyChanged("ps_ID");
					this.Onps_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_Name", DbType="VarChar(15)")]
		public string part_Name
		{
			get
			{
				return this._part_Name;
			}
			set
			{
				if ((this._part_Name != value))
				{
					this.Onpart_NameChanging(value);
					this.SendPropertyChanging();
					this._part_Name = value;
					this.SendPropertyChanged("part_Name");
					this.Onpart_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_Description", DbType="VarChar(50)")]
		public string part_Description
		{
			get
			{
				return this._part_Description;
			}
			set
			{
				if ((this._part_Description != value))
				{
					this.Onpart_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._part_Description = value;
					this.SendPropertyChanged("part_Description");
					this.Onpart_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utPartOfSpeech_tWordForms", Storage="_tWordForms", ThisKey="ps_ID", OtherKey="part_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utPartOfSpeech = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utPartOfSpeech = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utPerson")]
	public partial class utPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vp_ID;
		
		private string _vp_Name;
		
		private string _vp_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvp_IDChanging(int value);
    partial void Onvp_IDChanged();
    partial void Onvp_NameChanging(string value);
    partial void Onvp_NameChanged();
    partial void Onvp_DescriptionChanging(string value);
    partial void Onvp_DescriptionChanged();
    #endregion
		
		public utPerson()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vp_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vp_ID
		{
			get
			{
				return this._vp_ID;
			}
			set
			{
				if ((this._vp_ID != value))
				{
					this.Onvp_IDChanging(value);
					this.SendPropertyChanging();
					this._vp_ID = value;
					this.SendPropertyChanged("vp_ID");
					this.Onvp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vp_Name", DbType="VarChar(15)")]
		public string vp_Name
		{
			get
			{
				return this._vp_Name;
			}
			set
			{
				if ((this._vp_Name != value))
				{
					this.Onvp_NameChanging(value);
					this.SendPropertyChanging();
					this._vp_Name = value;
					this.SendPropertyChanged("vp_Name");
					this.Onvp_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vp_Description", DbType="VarChar(50)")]
		public string vp_Description
		{
			get
			{
				return this._vp_Description;
			}
			set
			{
				if ((this._vp_Description != value))
				{
					this.Onvp_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._vp_Description = value;
					this.SendPropertyChanged("vp_Description");
					this.Onvp_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utPerson_tWordForms", Storage="_tWordForms", ThisKey="vp_ID", OtherKey="vp_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utPerson = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utPerson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utTense")]
	public partial class utTense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vt_ID;
		
		private string _vt_Name;
		
		private string _vt_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvt_IDChanging(int value);
    partial void Onvt_IDChanged();
    partial void Onvt_NameChanging(string value);
    partial void Onvt_NameChanged();
    partial void Onvt_DescriptionChanging(string value);
    partial void Onvt_DescriptionChanged();
    #endregion
		
		public utTense()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vt_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vt_ID
		{
			get
			{
				return this._vt_ID;
			}
			set
			{
				if ((this._vt_ID != value))
				{
					this.Onvt_IDChanging(value);
					this.SendPropertyChanging();
					this._vt_ID = value;
					this.SendPropertyChanged("vt_ID");
					this.Onvt_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vt_Name", DbType="VarChar(15)")]
		public string vt_Name
		{
			get
			{
				return this._vt_Name;
			}
			set
			{
				if ((this._vt_Name != value))
				{
					this.Onvt_NameChanging(value);
					this.SendPropertyChanging();
					this._vt_Name = value;
					this.SendPropertyChanged("vt_Name");
					this.Onvt_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vt_Description", DbType="VarChar(50)")]
		public string vt_Description
		{
			get
			{
				return this._vt_Description;
			}
			set
			{
				if ((this._vt_Description != value))
				{
					this.Onvt_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._vt_Description = value;
					this.SendPropertyChanged("vt_Description");
					this.Onvt_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utTense_tWordForms", Storage="_tWordForms", ThisKey="vt_ID", OtherKey="vt_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utTense = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utTense = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.utVerb")]
	public partial class utVerb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vb_ID;
		
		private string _vb_Name;
		
		private string _vb_Description;
		
		private EntitySet<tWordForms> _tWordForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvb_IDChanging(int value);
    partial void Onvb_IDChanged();
    partial void Onvb_NameChanging(string value);
    partial void Onvb_NameChanged();
    partial void Onvb_DescriptionChanging(string value);
    partial void Onvb_DescriptionChanged();
    #endregion
		
		public utVerb()
		{
			this._tWordForms = new EntitySet<tWordForms>(new Action<tWordForms>(this.attach_tWordForms), new Action<tWordForms>(this.detach_tWordForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vb_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vb_ID
		{
			get
			{
				return this._vb_ID;
			}
			set
			{
				if ((this._vb_ID != value))
				{
					this.Onvb_IDChanging(value);
					this.SendPropertyChanging();
					this._vb_ID = value;
					this.SendPropertyChanged("vb_ID");
					this.Onvb_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vb_Name", DbType="VarChar(15)")]
		public string vb_Name
		{
			get
			{
				return this._vb_Name;
			}
			set
			{
				if ((this._vb_Name != value))
				{
					this.Onvb_NameChanging(value);
					this.SendPropertyChanging();
					this._vb_Name = value;
					this.SendPropertyChanged("vb_Name");
					this.Onvb_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vb_Description", DbType="VarChar(50)")]
		public string vb_Description
		{
			get
			{
				return this._vb_Description;
			}
			set
			{
				if ((this._vb_Description != value))
				{
					this.Onvb_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._vb_Description = value;
					this.SendPropertyChanged("vb_Description");
					this.Onvb_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="utVerb_tWordForms", Storage="_tWordForms", ThisKey="vb_ID", OtherKey="vb_ID")]
		public EntitySet<tWordForms> tWordForms
		{
			get
			{
				return this._tWordForms;
			}
			set
			{
				this._tWordForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utVerb = this;
		}
		
		private void detach_tWordForms(tWordForms entity)
		{
			this.SendPropertyChanging();
			entity.utVerb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="winkert_winkert.FormsView")]
	public partial class FormsView
	{
		
		private System.Nullable<int> _d_ID;
		
		private string _d_Word;
		
		private string _d_Meaning;
		
		private System.Nullable<int> _s_ID;
		
		private string _wf_Form;
		
		private System.Nullable<int> _e_ID;
		
		private string _vc_Name;
		
		private string _vb_Name;
		
		private string _nd_Name;
		
		private string _nc_Name;
		
		private string _ge_Name;
		
		private string _vm_Name;
		
		private string _num_Name;
		
		private string _part_Name;
		
		private string _vp_Name;
		
		private string _vt_Name;
		
		private string _vv_Name;
		
		public FormsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_ID", DbType="Int")]
		public System.Nullable<int> d_ID
		{
			get
			{
				return this._d_ID;
			}
			set
			{
				if ((this._d_ID != value))
				{
					this._d_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_Word", DbType="VarChar(50)")]
		public string d_Word
		{
			get
			{
				return this._d_Word;
			}
			set
			{
				if ((this._d_Word != value))
				{
					this._d_Word = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_Meaning", DbType="VarChar(MAX)")]
		public string d_Meaning
		{
			get
			{
				return this._d_Meaning;
			}
			set
			{
				if ((this._d_Meaning != value))
				{
					this._d_Meaning = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_ID", DbType="Int")]
		public System.Nullable<int> s_ID
		{
			get
			{
				return this._s_ID;
			}
			set
			{
				if ((this._s_ID != value))
				{
					this._s_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wf_Form", DbType="VarChar(50)")]
		public string wf_Form
		{
			get
			{
				return this._wf_Form;
			}
			set
			{
				if ((this._wf_Form != value))
				{
					this._wf_Form = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_ID", DbType="Int")]
		public System.Nullable<int> e_ID
		{
			get
			{
				return this._e_ID;
			}
			set
			{
				if ((this._e_ID != value))
				{
					this._e_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vc_Name", DbType="VarChar(15)")]
		public string vc_Name
		{
			get
			{
				return this._vc_Name;
			}
			set
			{
				if ((this._vc_Name != value))
				{
					this._vc_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vb_Name", DbType="VarChar(15)")]
		public string vb_Name
		{
			get
			{
				return this._vb_Name;
			}
			set
			{
				if ((this._vb_Name != value))
				{
					this._vb_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nd_Name", DbType="VarChar(15)")]
		public string nd_Name
		{
			get
			{
				return this._nd_Name;
			}
			set
			{
				if ((this._nd_Name != value))
				{
					this._nd_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nc_Name", DbType="VarChar(15)")]
		public string nc_Name
		{
			get
			{
				return this._nc_Name;
			}
			set
			{
				if ((this._nc_Name != value))
				{
					this._nc_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ge_Name", DbType="VarChar(15)")]
		public string ge_Name
		{
			get
			{
				return this._ge_Name;
			}
			set
			{
				if ((this._ge_Name != value))
				{
					this._ge_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vm_Name", DbType="VarChar(15)")]
		public string vm_Name
		{
			get
			{
				return this._vm_Name;
			}
			set
			{
				if ((this._vm_Name != value))
				{
					this._vm_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_Name", DbType="VarChar(15)")]
		public string num_Name
		{
			get
			{
				return this._num_Name;
			}
			set
			{
				if ((this._num_Name != value))
				{
					this._num_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_Name", DbType="VarChar(15)")]
		public string part_Name
		{
			get
			{
				return this._part_Name;
			}
			set
			{
				if ((this._part_Name != value))
				{
					this._part_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vp_Name", DbType="VarChar(15)")]
		public string vp_Name
		{
			get
			{
				return this._vp_Name;
			}
			set
			{
				if ((this._vp_Name != value))
				{
					this._vp_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vt_Name", DbType="VarChar(15)")]
		public string vt_Name
		{
			get
			{
				return this._vt_Name;
			}
			set
			{
				if ((this._vt_Name != value))
				{
					this._vt_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vv_Name", DbType="VarChar(15)")]
		public string vv_Name
		{
			get
			{
				return this._vv_Name;
			}
			set
			{
				if ((this._vv_Name != value))
				{
					this._vv_Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
